/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LangIndexRouteImport } from './routes/$lang/index'
import { Route as LangLayoutRouteImport } from './routes/$lang/_layout'
import { Route as LangLayoutResearchListIndexRouteImport } from './routes/$lang/_layout/research-list/index'
import { Route as LangLayoutDataUsageIndexRouteImport } from './routes/$lang/_layout/data-usage/index'
import { Route as LangLayoutDataProvisionIndexRouteImport } from './routes/$lang/_layout/data-provision/index'
import { Route as LangLayoutContactIndexRouteImport } from './routes/$lang/_layout/contact/index'
import { Route as LangLayoutAchievementsIndexRouteImport } from './routes/$lang/_layout/achievements/index'
import { Route as LangLayoutAboutDataIndexRouteImport } from './routes/$lang/_layout/about-data/index'
import { Route as LangLayoutResearchListResearchIdIndexRouteImport } from './routes/$lang/_layout/research-list/$researchId/index'
import { Route as LangLayoutDataProvisionNavigationIndexRouteImport } from './routes/$lang/_layout/data-provision/navigation/index'
import { Route as LangLayoutResearchListResearchIdResearchVerRouteImport } from './routes/$lang/_layout/research-list/$researchId/$researchVer'

const LangRouteImport = createFileRoute('/$lang')()

const LangRoute = LangRouteImport.update({
  id: '/$lang',
  path: '/$lang',
  getParentRoute: () => rootRouteImport,
} as any)
const LangIndexRoute = LangIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LangRoute,
} as any)
const LangLayoutRoute = LangLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => LangRoute,
} as any)
const LangLayoutResearchListIndexRoute =
  LangLayoutResearchListIndexRouteImport.update({
    id: '/research-list/',
    path: '/research-list/',
    getParentRoute: () => LangLayoutRoute,
  } as any)
const LangLayoutDataUsageIndexRoute =
  LangLayoutDataUsageIndexRouteImport.update({
    id: '/data-usage/',
    path: '/data-usage/',
    getParentRoute: () => LangLayoutRoute,
  } as any)
const LangLayoutDataProvisionIndexRoute =
  LangLayoutDataProvisionIndexRouteImport.update({
    id: '/data-provision/',
    path: '/data-provision/',
    getParentRoute: () => LangLayoutRoute,
  } as any)
const LangLayoutContactIndexRoute = LangLayoutContactIndexRouteImport.update({
  id: '/contact/',
  path: '/contact/',
  getParentRoute: () => LangLayoutRoute,
} as any)
const LangLayoutAchievementsIndexRoute =
  LangLayoutAchievementsIndexRouteImport.update({
    id: '/achievements/',
    path: '/achievements/',
    getParentRoute: () => LangLayoutRoute,
  } as any)
const LangLayoutAboutDataIndexRoute =
  LangLayoutAboutDataIndexRouteImport.update({
    id: '/about-data/',
    path: '/about-data/',
    getParentRoute: () => LangLayoutRoute,
  } as any)
const LangLayoutResearchListResearchIdIndexRoute =
  LangLayoutResearchListResearchIdIndexRouteImport.update({
    id: '/research-list/$researchId/',
    path: '/research-list/$researchId/',
    getParentRoute: () => LangLayoutRoute,
  } as any)
const LangLayoutDataProvisionNavigationIndexRoute =
  LangLayoutDataProvisionNavigationIndexRouteImport.update({
    id: '/data-provision/navigation/',
    path: '/data-provision/navigation/',
    getParentRoute: () => LangLayoutRoute,
  } as any)
const LangLayoutResearchListResearchIdResearchVerRoute =
  LangLayoutResearchListResearchIdResearchVerRouteImport.update({
    id: '/research-list/$researchId/$researchVer',
    path: '/research-list/$researchId/$researchVer',
    getParentRoute: () => LangLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/$lang': typeof LangLayoutRouteWithChildren
  '/$lang/': typeof LangIndexRoute
  '/$lang/about-data': typeof LangLayoutAboutDataIndexRoute
  '/$lang/achievements': typeof LangLayoutAchievementsIndexRoute
  '/$lang/contact': typeof LangLayoutContactIndexRoute
  '/$lang/data-provision': typeof LangLayoutDataProvisionIndexRoute
  '/$lang/data-usage': typeof LangLayoutDataUsageIndexRoute
  '/$lang/research-list': typeof LangLayoutResearchListIndexRoute
  '/$lang/research-list/$researchId/$researchVer': typeof LangLayoutResearchListResearchIdResearchVerRoute
  '/$lang/data-provision/navigation': typeof LangLayoutDataProvisionNavigationIndexRoute
  '/$lang/research-list/$researchId': typeof LangLayoutResearchListResearchIdIndexRoute
}
export interface FileRoutesByTo {
  '/$lang': typeof LangIndexRoute
  '/$lang/about-data': typeof LangLayoutAboutDataIndexRoute
  '/$lang/achievements': typeof LangLayoutAchievementsIndexRoute
  '/$lang/contact': typeof LangLayoutContactIndexRoute
  '/$lang/data-provision': typeof LangLayoutDataProvisionIndexRoute
  '/$lang/data-usage': typeof LangLayoutDataUsageIndexRoute
  '/$lang/research-list': typeof LangLayoutResearchListIndexRoute
  '/$lang/research-list/$researchId/$researchVer': typeof LangLayoutResearchListResearchIdResearchVerRoute
  '/$lang/data-provision/navigation': typeof LangLayoutDataProvisionNavigationIndexRoute
  '/$lang/research-list/$researchId': typeof LangLayoutResearchListResearchIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/$lang': typeof LangRouteWithChildren
  '/$lang/_layout': typeof LangLayoutRouteWithChildren
  '/$lang/': typeof LangIndexRoute
  '/$lang/_layout/about-data/': typeof LangLayoutAboutDataIndexRoute
  '/$lang/_layout/achievements/': typeof LangLayoutAchievementsIndexRoute
  '/$lang/_layout/contact/': typeof LangLayoutContactIndexRoute
  '/$lang/_layout/data-provision/': typeof LangLayoutDataProvisionIndexRoute
  '/$lang/_layout/data-usage/': typeof LangLayoutDataUsageIndexRoute
  '/$lang/_layout/research-list/': typeof LangLayoutResearchListIndexRoute
  '/$lang/_layout/research-list/$researchId/$researchVer': typeof LangLayoutResearchListResearchIdResearchVerRoute
  '/$lang/_layout/data-provision/navigation/': typeof LangLayoutDataProvisionNavigationIndexRoute
  '/$lang/_layout/research-list/$researchId/': typeof LangLayoutResearchListResearchIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$lang'
    | '/$lang/'
    | '/$lang/about-data'
    | '/$lang/achievements'
    | '/$lang/contact'
    | '/$lang/data-provision'
    | '/$lang/data-usage'
    | '/$lang/research-list'
    | '/$lang/research-list/$researchId/$researchVer'
    | '/$lang/data-provision/navigation'
    | '/$lang/research-list/$researchId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$lang'
    | '/$lang/about-data'
    | '/$lang/achievements'
    | '/$lang/contact'
    | '/$lang/data-provision'
    | '/$lang/data-usage'
    | '/$lang/research-list'
    | '/$lang/research-list/$researchId/$researchVer'
    | '/$lang/data-provision/navigation'
    | '/$lang/research-list/$researchId'
  id:
    | '__root__'
    | '/$lang'
    | '/$lang/_layout'
    | '/$lang/'
    | '/$lang/_layout/about-data/'
    | '/$lang/_layout/achievements/'
    | '/$lang/_layout/contact/'
    | '/$lang/_layout/data-provision/'
    | '/$lang/_layout/data-usage/'
    | '/$lang/_layout/research-list/'
    | '/$lang/_layout/research-list/$researchId/$researchVer'
    | '/$lang/_layout/data-provision/navigation/'
    | '/$lang/_layout/research-list/$researchId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LangRoute: typeof LangRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$lang': {
      id: '/$lang'
      path: '/$lang'
      fullPath: '/$lang'
      preLoaderRoute: typeof LangRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$lang/': {
      id: '/$lang/'
      path: '/'
      fullPath: '/$lang/'
      preLoaderRoute: typeof LangIndexRouteImport
      parentRoute: typeof LangRoute
    }
    '/$lang/_layout': {
      id: '/$lang/_layout'
      path: '/$lang'
      fullPath: '/$lang'
      preLoaderRoute: typeof LangLayoutRouteImport
      parentRoute: typeof LangRoute
    }
    '/$lang/_layout/research-list/': {
      id: '/$lang/_layout/research-list/'
      path: '/research-list'
      fullPath: '/$lang/research-list'
      preLoaderRoute: typeof LangLayoutResearchListIndexRouteImport
      parentRoute: typeof LangLayoutRoute
    }
    '/$lang/_layout/data-usage/': {
      id: '/$lang/_layout/data-usage/'
      path: '/data-usage'
      fullPath: '/$lang/data-usage'
      preLoaderRoute: typeof LangLayoutDataUsageIndexRouteImport
      parentRoute: typeof LangLayoutRoute
    }
    '/$lang/_layout/data-provision/': {
      id: '/$lang/_layout/data-provision/'
      path: '/data-provision'
      fullPath: '/$lang/data-provision'
      preLoaderRoute: typeof LangLayoutDataProvisionIndexRouteImport
      parentRoute: typeof LangLayoutRoute
    }
    '/$lang/_layout/contact/': {
      id: '/$lang/_layout/contact/'
      path: '/contact'
      fullPath: '/$lang/contact'
      preLoaderRoute: typeof LangLayoutContactIndexRouteImport
      parentRoute: typeof LangLayoutRoute
    }
    '/$lang/_layout/achievements/': {
      id: '/$lang/_layout/achievements/'
      path: '/achievements'
      fullPath: '/$lang/achievements'
      preLoaderRoute: typeof LangLayoutAchievementsIndexRouteImport
      parentRoute: typeof LangLayoutRoute
    }
    '/$lang/_layout/about-data/': {
      id: '/$lang/_layout/about-data/'
      path: '/about-data'
      fullPath: '/$lang/about-data'
      preLoaderRoute: typeof LangLayoutAboutDataIndexRouteImport
      parentRoute: typeof LangLayoutRoute
    }
    '/$lang/_layout/research-list/$researchId/': {
      id: '/$lang/_layout/research-list/$researchId/'
      path: '/research-list/$researchId'
      fullPath: '/$lang/research-list/$researchId'
      preLoaderRoute: typeof LangLayoutResearchListResearchIdIndexRouteImport
      parentRoute: typeof LangLayoutRoute
    }
    '/$lang/_layout/data-provision/navigation/': {
      id: '/$lang/_layout/data-provision/navigation/'
      path: '/data-provision/navigation'
      fullPath: '/$lang/data-provision/navigation'
      preLoaderRoute: typeof LangLayoutDataProvisionNavigationIndexRouteImport
      parentRoute: typeof LangLayoutRoute
    }
    '/$lang/_layout/research-list/$researchId/$researchVer': {
      id: '/$lang/_layout/research-list/$researchId/$researchVer'
      path: '/research-list/$researchId/$researchVer'
      fullPath: '/$lang/research-list/$researchId/$researchVer'
      preLoaderRoute: typeof LangLayoutResearchListResearchIdResearchVerRouteImport
      parentRoute: typeof LangLayoutRoute
    }
  }
}

interface LangLayoutRouteChildren {
  LangLayoutAboutDataIndexRoute: typeof LangLayoutAboutDataIndexRoute
  LangLayoutAchievementsIndexRoute: typeof LangLayoutAchievementsIndexRoute
  LangLayoutContactIndexRoute: typeof LangLayoutContactIndexRoute
  LangLayoutDataProvisionIndexRoute: typeof LangLayoutDataProvisionIndexRoute
  LangLayoutDataUsageIndexRoute: typeof LangLayoutDataUsageIndexRoute
  LangLayoutResearchListIndexRoute: typeof LangLayoutResearchListIndexRoute
  LangLayoutResearchListResearchIdResearchVerRoute: typeof LangLayoutResearchListResearchIdResearchVerRoute
  LangLayoutDataProvisionNavigationIndexRoute: typeof LangLayoutDataProvisionNavigationIndexRoute
  LangLayoutResearchListResearchIdIndexRoute: typeof LangLayoutResearchListResearchIdIndexRoute
}

const LangLayoutRouteChildren: LangLayoutRouteChildren = {
  LangLayoutAboutDataIndexRoute: LangLayoutAboutDataIndexRoute,
  LangLayoutAchievementsIndexRoute: LangLayoutAchievementsIndexRoute,
  LangLayoutContactIndexRoute: LangLayoutContactIndexRoute,
  LangLayoutDataProvisionIndexRoute: LangLayoutDataProvisionIndexRoute,
  LangLayoutDataUsageIndexRoute: LangLayoutDataUsageIndexRoute,
  LangLayoutResearchListIndexRoute: LangLayoutResearchListIndexRoute,
  LangLayoutResearchListResearchIdResearchVerRoute:
    LangLayoutResearchListResearchIdResearchVerRoute,
  LangLayoutDataProvisionNavigationIndexRoute:
    LangLayoutDataProvisionNavigationIndexRoute,
  LangLayoutResearchListResearchIdIndexRoute:
    LangLayoutResearchListResearchIdIndexRoute,
}

const LangLayoutRouteWithChildren = LangLayoutRoute._addFileChildren(
  LangLayoutRouteChildren,
)

interface LangRouteChildren {
  LangLayoutRoute: typeof LangLayoutRouteWithChildren
  LangIndexRoute: typeof LangIndexRoute
}

const LangRouteChildren: LangRouteChildren = {
  LangLayoutRoute: LangLayoutRouteWithChildren,
  LangIndexRoute: LangIndexRoute,
}

const LangRouteWithChildren = LangRoute._addFileChildren(LangRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LangRoute: LangRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
