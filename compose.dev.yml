services:
  cms-db:
    image: postgres:17
    container_name: cms-db
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydb"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - humandbs-dev-network

  cms-db-migrator:
    image: oven/bun:1.2.23
    working_dir: /app
    # Mount your app (so drizzle.config.ts, migrations folder, etc. are available)
    volumes:
      - ./:/app
    depends_on:
      cms-db:
        condition: service_healthy
    entrypoint: >
      sh -c "
        cd ./apps/frontend &&
        echo 'üèÉ‚Äç‚ôÇÔ∏è Applying Drizzle migrations' &&
        bunx drizzle-kit push &&
        echo 'üå± Seeding‚Ä¶' &&
        bun run db:seed &&
        echo '‚úÖ Migrations complete'
      "
    networks:
      - humandbs-dev-network

  frontend:
    depends_on:
      - cms-db
      - backend
    build:
      context: .
      dockerfile: Dockerfile-dev
    image: humandbs-dev
    container_name: humandbs-frontend-dev
    volumes:
      - ${PWD}:/app
      - node_modules:/app/node_modules
      - frontend_node_modules:/app/apps/frontend/node_modules
      - backend_node_modules:/app/apps/backend/node_modules
      - eslint_config_node_modules:/app/packages/eslint-config/node_modules
    environment:
      - HUMANDBS_FRONTEND_HOST=0.0.0.0
      - HUMANDBS_FRONTEND_PORT=3000
      - POSTGRES_HOST=cms-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=mydb
      - HUMANDBS_BACKEND_PORT=8080
      - HUMANDBS_BACKEND=backend
    ports:
      - 127.0.0.1:3000:3000
    working_dir: /app
    command: ["sleep", "infinity"]
    networks:
      - humandbs-dev-network
    init: true

  backend:
    build:
      context: .
      dockerfile: Dockerfile-dev
    image: humandbs-dev
    container_name: humandbs-backend-dev
    volumes:
      - ${PWD}:/app
      - node_modules:/app/node_modules
      - frontend_node_modules:/app/apps/frontend/node_modules
      - backend_node_modules:/app/apps/backend/node_modules
      - eslint_config_node_modules:/app/packages/eslint-config/node_modules
      # - /lustre9/open/database/ddbjshare/private/ddbj.nig.ac.jp/jga/metadata:/mount/jga-metadata:ro
    environment:
      - HUMANDBS_BACKEND_HOST=0.0.0.0
      - HUMANDBS_BACKEND_PORT=8080
      - HUMANDBS_BACKEND_OLLAMA_URL=http://humandbs-ollama-dev:11434
      # - HUMANDBS_BACKEND_JGA_METADATA_DIR=/mount/jga-metadata
    ports:
      - 127.0.0.1:8080:8080
    working_dir: /app
    command: ["sleep", "infinity"]
    networks:
      - humandbs-dev-network
    init: true

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.6
    container_name: humandbs-elasticsearch-dev
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - ELASTIC_PASSWORD=humandbs-elasticsearch-dev-password
    ports:
      - "127.0.0.1:9200:9200"
    volumes:
      - ${PWD}/es-data:/usr/share/elasticsearch/data
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1
    mem_limit: 4g
    networks:
      - humandbs-dev-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.6
    container_name: humandbs-kibana-dev
    environment:
      - ELASTICSEARCH_HOSTS=http://humandbs-elasticsearch-dev:9200
      - ELASTICSEARCH_USERNAME=humandbs-elasticsearch-dev-user
      - ELASTICSEARCH_PASSWORD=humandbs-elasticsearch-dev-password
    ports:
      - "127.0.0.1:5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - humandbs-dev-network

  ollama:
    image: ollama/ollama:0.11.6
    container_name: humandbs-ollama-dev
    volumes:
      - ${PWD}/ollama-data:/root/.ollama
    entrypoint: ["/bin/ollama"]
    command: ["serve"]
    ports:
      - "127.0.0.1:11434:11434"
    networks:
      - humandbs-dev-network

volumes:
  node_modules: {}
  frontend_node_modules: {}
  backend_node_modules: {}
  eslint_config_node_modules: {}
  pgdata: {}

networks:
  humandbs-dev-network:
    name: humandbs-dev-network
    external: true
