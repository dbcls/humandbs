services:
  cms-db:
    image: postgres:17
    container_name: cms-db
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydb"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - humandbs-dev-network

  cms-db-migrator:
    image: oven/bun:1.2-debian
    working_dir: /app
    # Mount your app (so drizzle.config.ts, migrations folder, etc. are available)
    volumes:
      - ./:/app
    depends_on:
      cms-db:
        condition: service_healthy
    entrypoint: >
      sh -c "
        cd ./apps/frontend &&
        echo 'üèÉ‚Äç‚ôÇÔ∏è Applying Drizzle migrations' &&
        bunx drizzle-kit push &&
        echo 'üå± Seeding‚Ä¶' &&
        bun run db:seed &&
        echo '‚úÖ Migrations complete'
      "
    networks:
      - humandbs-dev-network

  frontend:
    depends_on:
      - cms-db
      - backend
    build:
      context: .
      dockerfile: Dockerfile-dev
    image: humandbs-dev
    container_name: humandbs-frontend-dev
    volumes:
      - ${PWD}:/app
      - node_modules:/app/node_modules
    environment:
      - HUMANDBS_FRONTEND_HOST=0.0.0.0
      - HUMANDBS_FRONTEND_PORT=3000
    ports:
      - 127.0.0.1:3000:3000
    working_dir: /app
    command: ["sleep", "infinity"]
    networks:
      - humandbs-dev-network
    init: true

  backend:
    build:
      context: .
      dockerfile: Dockerfile-dev
    image: humandbs-dev
    container_name: humandbs-backend-dev
    volumes:
      - ${PWD}:/app
      - node_modules:/app/node_modules
      # - /lustre9/open/database/ddbjshare/private/ddbj.nig.ac.jp/jga/metadata:/mount/jga-metadata:ro
    environment:
      - HUMANDBS_BACKEND_HOST=0.0.0.0
      - HUMANDBS_BACKEND_PORT=8080
      # - HUMANDBS_BACKEND_JGA_METADATA_DIR=/mount/jga-metadata
    ports:
      - 127.0.0.1:8080:8080
    working_dir: /app
    command: ["sleep", "infinity"]
    networks:
      - humandbs-dev-network
    init: true

volumes:
  node_modules: {}
  pgdata: {}

networks:
  humandbs-dev-network:
    name: humandbs-dev-network
    external: true
